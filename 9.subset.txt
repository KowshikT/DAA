import java.util.*;

public class SubsetSum {

    // Recursive function to find subsets
    static void findSubsets(int[] arr, int index, int sum, List<Integer> currentSubset) {
        if (sum == 0) {
            System.out.println("Subset found: " + currentSubset);
            return;
        }

        if (index == arr.length || sum < 0)
            return;

        // Include the current element
        currentSubset.add(arr[index]);
        findSubsets(arr, index + 1, sum - arr[index], currentSubset);

        // Exclude the current element (backtrack)
        currentSubset.remove(currentSubset.size() - 1);
        findSubsets(arr, index + 1, sum, currentSubset);
    }

    // Main method
    public static void main(String[] args) {
        int[] set = {3, 34, 4, 12, 5, 2};
        int targetSum = 9;

        System.out.println("Finding subsets of sum = " + targetSum);
        findSubsets(set, 0, targetSum, new ArrayList<>());
    }
}


output:
Finding subsets of sum = 9
Subset found: [3, 4, 2]
Subset found: [4, 5]
Subset found: [3, 5, 1]
...
